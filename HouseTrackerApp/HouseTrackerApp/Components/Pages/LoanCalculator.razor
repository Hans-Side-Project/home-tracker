@page "/loan-calculator"
@using HouseTrackerApp.Models
@using HouseTrackerApp.Services
@using Microsoft.JSInterop
@inject ILoanCalculationService LoanCalculationService
@inject IJSRuntime JSRuntime

<PageTitle>房屋追蹤器 - 專業房貸計算工具</PageTitle>

<div class="container-fluid fade-in">
    <!-- 頁面標題區域 -->
    <div class="text-center mb-5">
        <div class="d-flex justify-content-center align-items-center mb-3">
            <div class="d-flex align-items-center justify-content-center me-3" 
                 style="width: 50px; height: 50px; background: var(--primary-green-100); border-radius: var(--radius-xl);">
                <i class="bi bi-calculator text-green" style="font-size: 1.5rem;"></i>
            </div>
            <div class="text-start">
                <h2 class="mb-0 gradient-text">房貸助手</h2>
                <p class="text-secondary mb-0 small">智能房貸計算器</p>
            </div>
        </div>
        <p class="text-secondary mx-auto" style="max-width: 400px;">專業房貸計算工具，助您做出明智的購屋決策</p>
    </div>

    <!-- 主要內容區域 -->
    <div class="row g-4">
        <!-- 左側：房貸計算表單 -->
        <div class="col-lg-6">
            <div class="card-green">
                <div class="card-green-header">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-calculator me-2"></i>
                        <h5 class="mb-0">房貸計算</h5>
                    </div>
                </div>
                <div class="card-green-body">
                    <LoanInputFormSimple Input="@_loanInput"
                                       InputChanged="@OnInputChanged"
                                       ValidationResult="@_validationResult"
                                       ValidationResultChanged="@OnValidationResultChanged"
                                       OnCalculationCompleted="@OnCalculationCompleted" />
                </div>
            </div>
        </div>

        <!-- 右側：計算結果 -->
        <div class="col-lg-6">
            @if (_calculationResult != null)
            {
                <div class="card-green">
                    <div class="card-green-header">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-graph-up me-2"></i>
                            <h5 class="mb-0">計算結果</h5>
                        </div>
                    </div>
                    <div class="card-green-body">
                        <LoanResultDisplay Result="@_calculationResult" />
                    </div>
                </div>
            }
            else
            {
                <div class="card-green">
                    <div class="card-green-header-light">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-graph-up me-2"></i>
                            <h5 class="mb-0">計算結果</h5>
                        </div>
                    </div>
                    <div class="card-green-body text-center py-5">
                        <div style="color: var(--text-tertiary);">
                            <div class="d-flex justify-content-center align-items-center mb-4" 
                                 style="width: 80px; height: 80px; background: var(--primary-green-50); border-radius: var(--radius-2xl); margin: 0 auto;">
                                <i class="bi bi-info-circle" style="font-size: 2rem; color: var(--primary-green-400);"></i>
                            </div>
                            <h5 class="text-secondary mb-3">請輸入房貸資料並進行計算</h5>
                            <p class="text-tertiary">填寫左側表單資料後，計算結果將顯示在這裡</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    @if (_calculationResult != null && _calculationResult.PaymentSchedule.Any())
    {
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-table me-2"></i>詳細還款明細
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>期數</th>
                                        <th>年/月</th>
                                        <th>每月還款</th>
                                        <th>本金</th>
                                        <th>利息</th>
                                        <th>剩餘本金</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var payment in _calculationResult.PaymentSchedule.Take(12))
                                    {
                                        <tr>
                                            <td>@payment.Period</td>
                                            <td>@payment.Year/@payment.Month</td>
                                            <td class="text-end">@payment.Payment.ToString("N0")</td>
                                            <td class="text-end text-success">@payment.Principal.ToString("N0")</td>
                                            <td class="text-end text-warning">@payment.Interest.ToString("N0")</td>
                                            <td class="text-end">@payment.RemainingBalance.ToString("N0")</td>
                                        </tr>
                                    }
                                    @if (_calculationResult.PaymentSchedule.Count > 12)
                                    {
                                        <tr>
                                            <td colspan="6" class="text-center text-muted">
                                                <small>... 還有 @(_calculationResult.PaymentSchedule.Count - 12) 期，請下載完整明細表</small>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        @if (_calculationResult.PaymentSchedule.Count > 12)
                        {
                            <div class="text-center mt-3">
                                <button class="btn btn-outline-primary" @onclick="DownloadDetailReport">
                                    <i class="bi bi-download me-2"></i>下載完整還款明細表
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private LoanCalculationInput _loanInput = new();
    private LoanCalculationResult? _calculationResult;
    private ValidationResult _validationResult = new();

    protected override void OnInitialized()
    {
        // 設定預設值
        _loanInput.HousePrice = 10000000; // 1000萬
        _loanInput.DownPayment = 2000000; // 200萬
        _loanInput.LoanRatio = 80;
        _loanInput.LoanYears = 30;
        _loanInput.FixedAnnualRate = 2.5m;
        _loanInput.PaymentMethod = PaymentMethod.EqualInstallment;
        _loanInput.IsLoanRatioMode = true;
        _loanInput.IsFixedRateMode = true;
        _loanInput.IsNoGracePeriodMode = true;
    }

    private async Task OnInputChanged(LoanCalculationInput input)
    {
        _loanInput = input;
        await InvokeAsync(StateHasChanged);
    }

    private async Task OnValidationResultChanged(ValidationResult validationResult)
    {
        _validationResult = validationResult;
        await InvokeAsync(StateHasChanged);
    }

    private async Task OnCalculationCompleted(LoanCalculationResult result)
    {
        _calculationResult = result;
        await InvokeAsync(StateHasChanged);
    }

    private async Task DownloadDetailReport()
    {
        if (_calculationResult?.PaymentSchedule == null || !_calculationResult.PaymentSchedule.Any())
            return;

        try
        {
            // 建立 CSV 內容
            var csvContent = "期數,年/月,每月還款,本金,利息,剩餘本金\n";

            foreach (var payment in _calculationResult.PaymentSchedule)
            {
                csvContent += $"{payment.Period},{payment.Year}/{payment.Month:D2}," +
                             $"{payment.Payment:F0},{payment.Principal:F0}," +
                             $"{payment.Interest:F0},{payment.RemainingBalance:F0}\n";
            }

            // 轉換為 Base64
            var bytes = System.Text.Encoding.UTF8.GetBytes(csvContent);
            var base64 = Convert.ToBase64String(bytes);

            // 觸發下載
            var fileName = $"房貸還款明細_{DateTime.Now:yyyyMMdd_HHmmss}.csv";
            await JSRuntime.InvokeVoidAsync("downloadFile", fileName, base64);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"下載失敗: {ex.Message}");
        }
    }
}

<script>
    window.downloadFile = (filename, base64Content) => {
        const link = document.createElement('a');
        link.href = 'data:text/csv;base64,' + base64Content;
        link.download = filename;
        link.click();
    };
</script>
